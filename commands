#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

PLUGIN_BASE_PATH="$PLUGIN_PATH"
if [[ -n $DOKKU_API_VERSION ]]; then
  PLUGIN_BASE_PATH="$PLUGIN_ENABLED_PATH"
fi
source "$PLUGIN_BASE_PATH/common/functions"

is_an_app() {
  verify_app_name "$1"
}

get_slack_root() {
  if [[ -z $(is_webhook "$1") ]]; then
    verify_app_name "$1"
    APP="$1"
    echo "$DOKKU_ROOT/$APP"
  else
    echo "$DOKKU_ROOT"
  fi
}


case "$1" in
  redeploy:set)
    SLACK_ROOT=$(get_slack_root "$2")
    APP_REDEPLOY="$3"
    [[ -z $APP_REDEPLOY ]] && echo "Please specify an <app> to redeploy" && exit 1
    [[ -z $(is_an_app "$APP_REDEPLOY") ]] && echo "<app_redeploy> has to be a valid APP" && exit 1
    echo "$APP_REDEPLOY" > "$SLACK_ROOT/REDEPLOY"
    ;;

  redeploy:clear)
    SLACK_ROOT=$(get_slack_root "$2")
    rm "$SLACK_ROOT/REDEPLOY"
    ;;

  redeploy:get)
    SLACK_ROOT=$(get_slack_root "$2")
    cat "$SLACK_ROOT/REDEPLOY"
    ;;

  help)
    HELP=$(cat<<EOF
    redeploy:set [app] <app_redeploy>, Set <app_redeploy> when [app] deploys
    redeploy:clear [app], Clears redeploy for [app]
    redeploy:get [app], Display redeploy
EOF
)
    if [[ -n $DOKKU_API_VERSION ]]; then
      echo "$HELP"
    else
      cat && echo "$HELP"
    fi
    ;;

  *)
    exit $DOKKU_NOT_IMPLEMENTED_EXIT
    ;;
esac
